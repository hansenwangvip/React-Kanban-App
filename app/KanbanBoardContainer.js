import React, {Component, PropTypes} from 'react';import ReactDOM from 'react-dom';import KanbanBoard from './KanbanBoard';import 'whatwg-fetch';const API_URL = './kanban-api.json';const API_HEADERS = {	'Content-Type': 'application/json',	Authorization: ''};class KanbanBoardContainer extends Component {	constructor() {		super(...arguments);		this.state = {			cards: [],		};	}	componentDidMount() {		fetch(API_URL, {headers: API_HEADERS})			.then((response) => response.json())			.then((responseData) => {				this.setState({cards: responseData});			})			.catch((error) => {				console.log("Error fetching and parsing data", error);			});	}	addTask(cardId, taskName) {		console.log("Added!")	}	deleteTask(card, taskId, taskIndex) {		console.log("Deleted!")	}	toggleTask(cardId, taskId, taskIndex) {		console.log("Toggled!")	}	render() {		return <KanbanBoard cards={this.state.cards}		                    taskCallbacks={{			                    toggle: this.toggleTask.bind(this),			                    delete: this.deleteTask.bind(this),			                    add: this.addTask.bind(this)		                    }}		/>	}}export default KanbanBoardContainer;